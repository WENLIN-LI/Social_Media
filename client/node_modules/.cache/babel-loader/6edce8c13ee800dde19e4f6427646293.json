{"ast":null,"code":"var _jsxFileName = \"/Users/liwenlin/Documents/Connector/client/src/components/routing/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux'; //import Spinner from from '../layout/Spinner';\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    auth: {\n      isAuthenticated,\n      loading\n    },\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    renderj: props => !isAuthenticated && !loading ? /*#__PURE__*/React.createElement(Navigate, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 3\n    }\n  }));\n}; //{\n//if (loading) return <Spinner />;\n//if (isAuthenticated) return <Component />;\n//return <Navigate to='/login' />;\n//};\n\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst myStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(myStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/liwenlin/Documents/Connector/client/src/components/routing/PrivateRoute.js"],"names":["React","Route","Navigate","PropTypes","connect","PrivateRoute","component","Component","auth","isAuthenticated","loading","rest","props","propTypes","object","isRequired","myStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AAEA,MAAMC,YAAY,GAAG;AAAA,MAAC;AACpBC,IAAAA,SAAS,EAAEC,SADS;AAEpBC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,KAFc;AAGpB,OAAGC;AAHiB,GAAD;AAAA,sBAKnB,oBAAC,KAAD,oBACMA,IADN;AAEE,IAAA,OAAO,EAAGC,KAAD,IACP,CAACH,eAAD,IAAoB,CAACC,OAArB,gBACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,gBAGE,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALmB;AAAA,CAArB,C,CAgBA;AACA;AACA;AAEA;AACA;;;AAEAP,YAAY,CAACQ,SAAb,GAAyB;AACvBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBC;AADA,CAAzB;;AAIA,MAAMC,cAAc,GAAIC,KAAD,KAAY;AACjCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADqB,CAAZ,CAAvB;;AAIA,eAAeJ,OAAO,CAACY,cAAD,CAAP,CAAwBX,YAAxB,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Navigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n//import Spinner from from '../layout/Spinner';\n\nconst PrivateRoute = ({\n  component: Component,\n  auth: { isAuthenticated, loading },\n  ...rest\n}) => (\n  <Route\n    {...rest}\n    renderj={(props) =>\n      !isAuthenticated && !loading ? (\n        <Navigate to='/login' />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n//{\n//if (loading) return <Spinner />;\n//if (isAuthenticated) return <Component />;\n\n//return <Navigate to='/login' />;\n//};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired,\n};\n\nconst myStateToProps = (state) => ({\n  auth: state.auth,\n});\n\nexport default connect(myStateToProps)(PrivateRoute);\n"]},"metadata":{},"sourceType":"module"}